version: "3.8"

networks:
  movieNetwork:
    driver: bridge

services: 
  ## Database
  postgres:
    container_name: postgres
    image: postgres:15.3
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - movieNetwork

  ## API
  postgrest:
    container_name: postgrest
    image: postgrest/postgrest:v11.1.0
    ports:
      - "3000:3000"
    environment:
      PGRST_DB_URI: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_DB}:5432/${POSTGRES_DB}
      PGRST_DB_SCHEMA: public
      PGRST_DB_ANON_ROLE: anon
      PGRST_OPENAPI_SERVER_PROXY_URI: http://127.0.0.1:3000
    networks:
      - movieNetwork
    depends_on:
      - postgres

  ## S3 Storage
  s3ninja:
    container_name: s3ninja
    image: scireum/s3-ninja:8.3.2
    ports:
      - "9444:9000"
    networks:
      - movieNetwork

  ## Swagger
  swagger:
    container_name: swagger
    image: swaggerapi/swagger-ui:v5.1.0
    ports:
      - "8081:8080"
    expose:
      - "8080"
    environment:
      API_URL: http://localhost:3000/

  ## Adminer
  adminer:
    container_name: adminer
    image: adminer:4.8.1
    ports:
      - "8082:8080"
    environment:
      ADMINER_DEFAULT_SERVER: ${POSTGRES_DB}
      ADMINER_DESIGN: pepa-linha
      # ADMINER_PLUGINS: "enum-option enum-types"
    networks:
      - movieNetwork
    depends_on:
      - postgres
  
  # dbeaver:
  #   container_name: dbeaver
  #   image: dbeaver/cloudbeaver:23.1.1
  #   ports:
  #     - "8082:8978"
  #   networks:
  #     - movieNetwork
  #   depends_on:
  #     - postgres
